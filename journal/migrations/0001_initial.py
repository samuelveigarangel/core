# Generated by Django 4.2.7 on 2023-12-06 01:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AcceptedDocumentTypes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Describe the types of documents that can be submitted to the journal.\n                    Provide information regarding the positioning related to preprint submissions.\n                    Examples: Original Article, Review Article, Preprints and etc.",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Acknowledgements",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True, help_text="Describe the acknowledgments.", null=True
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AdditionalInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Free field for entering additional information or data.",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AMJournal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "scielo_issn",
                    models.CharField(
                        blank=True, max_length=9, null=True, verbose_name="Scielo Issn"
                    ),
                ),
                (
                    "data",
                    models.JSONField(blank=True, null=True, verbose_name="JSON File"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Annotation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                (
                    "creation_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Creation Date"
                    ),
                ),
                (
                    "update_date",
                    models.DateField(blank=True, null=True, verbose_name="Update Date"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ArticleSubmissionFormatCheckList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Descreva o teim do check list",
                        null=True,
                        verbose_name="Rich Text",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AuthorResponsibility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text='The author\'s declaration of responsibility for the content published in \n            the journal that owns the copyright Ex. DOAJ: The terms of copyright must not contradict \n            the terms of the license or the terms of the open access policy. "All rights reserved" is \n            never appropriate for open access content',
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AuthorsContributions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Description of how authors contributions should be specified.\n        Does it use any taxonomy? If yes, which one?\n        Does the article text explicitly state the authors contributions?\n        Preferably, use the CREDiT taxonomy structure: <a target='_blank' \n            href='https://casrai.org/credit/'>https://casrai.org/credit/</a>\n        ",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CitationsAndReferences",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Describe the citation and referencing style used by the journal. Provide examples of document types according to the style.",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ConflictPolicy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True, null=True, verbose_name="Rich Text"
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Copyright",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Describe the policy used by the journal on copyright issues. \n            We recommend that this section be in accordance with the recommendations of the SciELO criteria, \n            item 5.2.10.1.2. - Copyright",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CopyrightHolderHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "initial_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Initial Date"
                    ),
                ),
                (
                    "final_date",
                    models.DateField(blank=True, null=True, verbose_name="Final Date"),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DigitalAssets",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Please describe how tables, charts, figures, illustrations, maps, diagrams, and other digital assets in the documents should be presented for publication in the journal. It is important to specify technical details such as format, resolution, size, etc.",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Ecommittee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Authors must attach a statement of approval from the ethics committee of \n            the institution responsible for approving the research",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FeeCharging",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "coin",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("USD", "US Dollar"),
                            ("EUR", "Euro"),
                            ("JPY", "Japanese Yen"),
                            ("GBP", "British Pound Sterling"),
                            ("AUD", "Australian Dollar"),
                            ("CAD", "Canadian Dollar"),
                            ("CHF", "Swiss Franc"),
                            ("CNY", "Chinese Yuan"),
                            ("SEK", "Swedish Krona"),
                            ("NZD", "New Zealand Dollar"),
                            ("BRL", "Brazilian Real"),
                        ],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "fee_charge",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Please describe any charges to authors related to the submission or publication of works.\n        For article publication: Clearly state when no fees are charged.\n        Under what circumstances are charges applicable? Are there any discounts?\n        SciELO Statement on Financial Sustainability: <a target='_blank' \n            href='https://mailchi.mp/scielo/declaracao-sobre-sustentabilidade'>\n            https://mailchi.mp/scielo/declaracao-sobre-sustentabilidade</a>\n        ",
                        null=True,
                        verbose_name="Concepts",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FileOpenScience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FinancingStatement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True, help_text="???", null=True
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Focus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Insert here the focus and scope of the journal",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GenderIssues",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Describe how your journal considers gender diversity in the group of authors, editorial board, and reviewers.",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="History",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Insert here a brief history with events and milestones in the trajectory of the journal",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="IndexedAt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                ("name", models.TextField(null=True, verbose_name="Name")),
                ("acronym", models.TextField(null=True, verbose_name="Acronym")),
                ("url", models.URLField(max_length=500, null=True, verbose_name="URL")),
                (
                    "description",
                    models.TextField(null=True, verbose_name="Description"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("DATABASE", "DATABASE"),
                            ("DIRECTORY", "DIRECTORY"),
                            ("OTHER", "OTHER"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Type",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="IndexedAtFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_valid",
                    models.BooleanField(
                        blank=True, default=False, null=True, verbose_name="Is valid?"
                    ),
                ),
                (
                    "line_count",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="Number of lines"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Journal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "title",
                    models.TextField(
                        blank=True, null=True, verbose_name="Journal Title"
                    ),
                ),
                (
                    "short_title",
                    models.TextField(blank=True, null=True, verbose_name="Short Title"),
                ),
                (
                    "submission_online_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Submission online URL"
                    ),
                ),
                ("contact_name", models.TextField(blank=True, null=True)),
                (
                    "contact_address",
                    models.TextField(blank=True, null=True, verbose_name="Address"),
                ),
                (
                    "open_access",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", ""),
                            ("diamond", "Diamond"),
                            ("gold", "Gold"),
                            ("hybrid", "Hybrid"),
                            ("bronze", "Bronze"),
                            ("green", "Green"),
                            ("closed", "Closed"),
                        ],
                        max_length=10,
                        null=True,
                        verbose_name="Open Access status",
                    ),
                ),
                (
                    "url_oa",
                    models.URLField(
                        blank=True,
                        help_text="Suggested form: <a target='_blank' href='https://wp.scielo.org/wp-content/uploads/Formulario-de-Conformidade-Ciencia-Aberta.docx'>https://wp.scielo.org/wp-content/uploads/Formulario-de-Conformidade-Ciencia-Aberta.docx</a>",
                        null=True,
                        verbose_name="Open Science accordance form",
                    ),
                ),
                (
                    "collection_main_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Collection Main Url"
                    ),
                ),
                (
                    "frequency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("?", "Unknown"),
                            ("A", "Annual"),
                            ("B", "Bimonthly (every two months)"),
                            ("C", "Semiweekly (twice a week)"),
                            ("D", "Daily"),
                            ("E", "Biweekly (every two weeks)"),
                            ("F", "Semiannual (twice a year)"),
                            ("G", "Biennial (every two years)"),
                            ("H", "Triennial (every three years)"),
                            ("I", "Three times a week"),
                            ("J", "Three times a month"),
                            ("K", "Irregular (known to be so)"),
                            ("M", "Monthly"),
                            ("Q", "Quarterly"),
                            ("S", "Semimonthly (twice a month)"),
                            ("T", "Three times a year"),
                            ("W", "Weekly"),
                            ("Z", "Other frequencies"),
                        ],
                        max_length=4,
                        null=True,
                        verbose_name="Frequency",
                    ),
                ),
                (
                    "publishing_model",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("continuous", "Continuous"),
                            ("undefined", "Undefined"),
                        ],
                        max_length=16,
                        null=True,
                        verbose_name="Publishing Model",
                    ),
                ),
                (
                    "alphabet",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A", "Basic Roman"),
                            ("B", "Extensive Roman"),
                            ("C", "Cirillic"),
                            ("D", "Japanese"),
                            ("E", "Chinese"),
                            ("K", "Korean"),
                            ("O", "Another alphabet"),
                        ],
                        max_length=4,
                        null=True,
                        verbose_name="Alphabet",
                    ),
                ),
                (
                    "type_of_literature",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("C", "Conference"),
                            ("M", "Monograph"),
                            ("MC", "Conference papers as Monograph"),
                            ("MP", "Project papers as Monograph"),
                            ("MPC", "Project and Conference papers as monograph"),
                            ("MS", "Monograph Series"),
                            ("MSC", "Conference papers as Monograph Series"),
                            ("MSP", "Project papers as Monograph Series"),
                            ("N", "Document in a non conventional form"),
                            ("NC", "Conference papers in a non conventional form"),
                            ("NP", "Project papers in a non conventional form"),
                            ("P", "Project"),
                            ("S", "Serial"),
                            ("SC", "Conference papers as Periodical Series"),
                            (
                                "SCP",
                                "Conference and Project papers as periodical series",
                            ),
                            ("SP", "Project papers as Periodical Series"),
                            ("T", "Thesis and Dissertation"),
                            ("TS", "Thesis Series"),
                        ],
                        max_length=4,
                        null=True,
                        verbose_name="Type of Literature",
                    ),
                ),
                (
                    "treatment_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("am", "Analytical of a monograph"),
                            ("amc", "Analytical of a monograph in a collection"),
                            ("ams", "Analytical of a monograph in a serial"),
                            ("as", "Analytical of a serial"),
                            ("c", "Collective level"),
                            ("m", "Monographic level"),
                            ("mc", "Monographic in a collection"),
                            ("ms", "Monographic series level"),
                        ],
                        max_length=4,
                        null=True,
                        verbose_name="Treatment Level",
                    ),
                ),
                (
                    "level_of_publication",
                    models.CharField(
                        blank=True,
                        choices=[("CT", "Scientific/technical"), ("DI", "Divulgation")],
                        max_length=2,
                        null=True,
                        verbose_name="Level of Publication",
                    ),
                ),
                (
                    "national_code",
                    models.TextField(
                        blank=True, null=True, verbose_name="National Code"
                    ),
                ),
                (
                    "classification",
                    models.TextField(
                        blank=True, null=True, verbose_name="Classification"
                    ),
                ),
                (
                    "secs_code",
                    models.TextField(blank=True, null=True, verbose_name="Secs Code"),
                ),
                (
                    "medline_code",
                    models.TextField(
                        blank=True, null=True, verbose_name="Medline Code"
                    ),
                ),
                (
                    "medline_short_title",
                    models.TextField(
                        blank=True, null=True, verbose_name="Medline Title"
                    ),
                ),
                (
                    "journal_url",
                    models.URLField(blank=True, null=True, verbose_name="Journal URL"),
                ),
                (
                    "center_code",
                    models.TextField(blank=True, null=True, verbose_name="Center code"),
                ),
                (
                    "identification_number",
                    models.CharField(
                        blank=True,
                        max_length=9,
                        null=True,
                        verbose_name="Identification Number",
                    ),
                ),
                (
                    "ftp",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Ftp"
                    ),
                ),
                (
                    "user_subscription",
                    models.CharField(
                        blank=True,
                        max_length=3,
                        null=True,
                        verbose_name="User Subscription",
                    ),
                ),
                (
                    "subtitle",
                    models.TextField(blank=True, null=True, verbose_name="Subtitle"),
                ),
                (
                    "section",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Section"
                    ),
                ),
                (
                    "has_supplement",
                    models.TextField(
                        blank=True, null=True, verbose_name="Has Supplement"
                    ),
                ),
                (
                    "is_supplement",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Is supplement",
                    ),
                ),
                (
                    "acronym_letters",
                    models.CharField(
                        blank=True,
                        max_length=8,
                        null=True,
                        verbose_name="Acronym Letters",
                    ),
                ),
                (
                    "author_name",
                    models.TextField(
                        blank=True,
                        help_text="For compound surnames, create clear identification [uppercase, bold, and/or hyphen]",
                        null=True,
                        verbose_name="Authors names",
                    ),
                ),
                (
                    "manuscript_length",
                    models.IntegerField(
                        blank=True,
                        help_text="Manuscript Length (consider spacing)",
                        null=True,
                        verbose_name="Manuscript Length",
                    ),
                ),
            ],
            options={
                "verbose_name": "Journal",
                "verbose_name_plural": "Journals",
            },
        ),
        migrations.CreateModel(
            name="JournalEmail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("email", models.EmailField(max_length=254)),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="JournalHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "year",
                    models.CharField(
                        blank=True, max_length=4, null=True, verbose_name="Event year"
                    ),
                ),
                (
                    "month",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("01", "January"),
                            ("02", "February"),
                            ("03", "March"),
                            ("04", "April"),
                            ("05", "May"),
                            ("06", "June"),
                            ("07", "July"),
                            ("08", "August"),
                            ("09", "September"),
                            ("10", "October"),
                            ("11", "November"),
                            ("12", "December"),
                        ],
                        max_length=2,
                        null=True,
                        verbose_name="Event month",
                    ),
                ),
                (
                    "day",
                    models.CharField(
                        blank=True, max_length=2, null=True, verbose_name="Event day"
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ADMITTED", "Admitted to the collection"),
                            ("INTERRUPTED", "Indexing interrupted"),
                        ],
                        max_length=16,
                        null=True,
                        verbose_name="Event type",
                    ),
                ),
                (
                    "interruption_reason",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ceased", "Ceased journal"),
                            ("not-open-access", "Not open access"),
                            ("by-committee", "by the committee"),
                            ("by-editor", "by the editor"),
                        ],
                        max_length=16,
                        null=True,
                        verbose_name="Indexing interruption reason",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event",
                "verbose_name_plural": "Events",
            },
        ),
        migrations.CreateModel(
            name="JournalParallelTitles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(blank=True, null=True, verbose_name="Texto")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="JournalSocialNetwork",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "name",
                    models.TextField(
                        blank=True,
                        choices=[("facebook", "Facebook"), ("twitter", "Twitter")],
                        null=True,
                        verbose_name="Name",
                    ),
                ),
                ("url", models.URLField(blank=True, null=True, verbose_name="URL")),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Mission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True, null=True, verbose_name="Rich Text"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OfficialJournal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "title",
                    models.TextField(
                        blank=True, null=True, verbose_name="Official Title"
                    ),
                ),
                (
                    "iso_short_title",
                    models.TextField(
                        blank=True, null=True, verbose_name="ISO Short Title"
                    ),
                ),
                (
                    "foundation_year",
                    models.CharField(
                        blank=True,
                        max_length=4,
                        null=True,
                        verbose_name="Foundation Year",
                    ),
                ),
                (
                    "initial_year",
                    models.CharField(
                        blank=True, max_length=4, null=True, verbose_name="Initial Year"
                    ),
                ),
                (
                    "initial_month",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("01", "January"),
                            ("02", "February"),
                            ("03", "March"),
                            ("04", "April"),
                            ("05", "May"),
                            ("06", "June"),
                            ("07", "July"),
                            ("08", "August"),
                            ("09", "September"),
                            ("10", "October"),
                            ("11", "November"),
                            ("12", "December"),
                        ],
                        max_length=2,
                        null=True,
                        verbose_name="Month Year",
                    ),
                ),
                (
                    "initial_volume",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="Initial Volume",
                    ),
                ),
                (
                    "initial_number",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="Initial Number",
                    ),
                ),
                (
                    "terminate_year",
                    models.CharField(
                        blank=True,
                        max_length=4,
                        null=True,
                        verbose_name="Terminate year",
                    ),
                ),
                (
                    "terminate_month",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("01", "January"),
                            ("02", "February"),
                            ("03", "March"),
                            ("04", "April"),
                            ("05", "May"),
                            ("06", "June"),
                            ("07", "July"),
                            ("08", "August"),
                            ("09", "September"),
                            ("10", "October"),
                            ("11", "November"),
                            ("12", "December"),
                        ],
                        max_length=2,
                        null=True,
                        verbose_name="Terminate month",
                    ),
                ),
                (
                    "final_volume",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="Final Volume",
                    ),
                ),
                (
                    "final_number",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="Final Number",
                    ),
                ),
                (
                    "issn_print",
                    models.CharField(
                        blank=True, max_length=9, null=True, verbose_name="ISSN Print"
                    ),
                ),
                (
                    "issn_electronic",
                    models.CharField(
                        blank=True,
                        max_length=9,
                        null=True,
                        verbose_name="ISSN Eletronic",
                    ),
                ),
                (
                    "issnl",
                    models.CharField(
                        blank=True, max_length=9, null=True, verbose_name="ISSNL"
                    ),
                ),
            ],
            options={
                "verbose_name": "Official Journal",
                "verbose_name_plural": "Official Journals",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="OpenData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Refers to sharing data, codes, methods and other materials used and \n            resulting from research that are usually the basis of the texts of articles published by journals. \n            Guide: <a target='_blank' href='https://wp.scielo.org/wp-content/uploads/Guia_TOP_pt.pdf'>https://wp.scielo.org/wp-content/uploads/Guia_TOP_pt.pdf</a>",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OwnerHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "initial_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Initial Date"
                    ),
                ),
                (
                    "final_date",
                    models.DateField(blank=True, null=True, verbose_name="Final Date"),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Policies",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Describe here how the journal will deal with ethical issues and/or \n            issues that may damage the journal's reputation. What is the journal's position regarding \n            the retraction policy that the journal will adopt in cases of misconduct. \n            Best practice guide: <a target='_blank' \n            href='https://wp.scielo.org/wp-content/uploads/Guia-de-Boas-Praticas-para-o-Fortalecimento-da-Etica-na-Publicacao-Cientifica.pdf'>\n            https://wp.scielo.org/wp-content/uploads/Guia-de-Boas-Praticas-para-o-Fortalecimento-da-Etica-na-Publicacao-Cientifica.pdf</a>",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PreparingManuscript",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Specify how authors should present their research and explain why the work is suitable for publication in the journal.",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Preprint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="A preprint is defined as a manuscript ready for submission to a journal that is deposited \n            with trusted preprint servers before or in parallel with submission to a journal. \n            This practice joins that of continuous publication as mechanisms to speed up research communication. \n            Preprints share with journals the originality in the publication of articles and inhibit the use of \n            the double-blind procedure in the evaluation of manuscripts. \n            The use of preprints is an option and choice of the authors and it is up to the journals to adapt \n            their policies to accept the submission of manuscripts previously deposited in a preprints server \n            recognized by the journal.",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PublisherHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "initial_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Initial Date"
                    ),
                ),
                (
                    "final_date",
                    models.DateField(blank=True, null=True, verbose_name="Final Date"),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Brief description of the review flow",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SciELOJournal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        blank=True,
                        choices=[("facebook", "Facebook"), ("twitter", "Twitter")],
                        null=True,
                        verbose_name="Name",
                    ),
                ),
                ("url", models.URLField(blank=True, null=True, verbose_name="URL")),
                (
                    "journal_acron",
                    models.TextField(
                        blank=True, null=True, verbose_name="Journal Acronym"
                    ),
                ),
                (
                    "issn_scielo",
                    models.CharField(
                        blank=True, max_length=9, null=True, verbose_name="ISSN SciELO"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("?", "Unknow"),
                            ("C", "Current"),
                            ("D", "Ceased"),
                            ("R", "Reports only"),
                            ("S", "Suspended"),
                        ],
                        max_length=12,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
            ],
            options={
                "verbose_name": "SciELO Journal",
                "verbose_name_plural": "SciELO Journals",
            },
        ),
        migrations.CreateModel(
            name="SimilarityVerificationSoftwareAdoption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Please describe here if the journal uses any similarity verification software. Describe the policy. What cases are checked?\n            At what stage in the workflow are manuscripts verified?",
                        null=True,
                        verbose_name="Similarity erification software",
                    ),
                ),
                (
                    "policy_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Describe the policy. Which cases are verified? At what point in the workflow are the manuscripts checked?",
                        null=True,
                    ),
                ),
                (
                    "software",
                    models.TextField(
                        blank=True,
                        help_text="Write the name of the software used.",
                        null=True,
                    ),
                ),
                (
                    "url_software",
                    models.TextField(
                        blank=True,
                        help_text="Write the link of the software used.",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SponsorHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "initial_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Initial Date"
                    ),
                ),
                (
                    "final_date",
                    models.DateField(blank=True, null=True, verbose_name="Final Date"),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Standard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                ("code", models.CharField(blank=True, max_length=7, null=True)),
                ("value", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                ("code", models.CharField(blank=True, max_length=30, null=True)),
                ("value", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SubjectDescriptor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                ("value", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "ordering": ["value"],
            },
        ),
        migrations.CreateModel(
            name="SuppDocsRequiredForSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Describe any supplementary documents requested from authors during manuscript submission. Examples may include Open Science Compliance Form, authors' agreement statement, ethics committee approval form, etc.",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebsiteResponsibility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "rich_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="EX. DOAJ: Copyright terms applied to posted content must be clearly stated and separate \n            from copyright terms applied to the website",
                        null=True,
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "journal",
                    modelcluster.fields.ParentalKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="website_responsibility",
                        to="journal.journal",
                    ),
                ),
                (
                    "language",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.language",
                        verbose_name="Idioma",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebOfKnowledgeSubjectCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                ("value", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "ordering": ["value"],
            },
        ),
        migrations.CreateModel(
            name="WebOfKnowledge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                ("code", models.CharField(blank=True, max_length=8, null=True)),
                ("value", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_last_mod_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updater",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ThematicAreaJournal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation date"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last update date"
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "journal",
                    modelcluster.fields.ParentalKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="thematic_area",
                        to="journal.journal",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
